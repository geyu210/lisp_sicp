#lang racket
(define (square x) (* x x))
(+(let ((a 5)
       (b 4))
   (+ a b))
  2)
(define l (lambda (x y z) (+ x y z 4)))
(l 2 3 4)
((lambda (x y z) (+ x y z 4)) 1 2 3)
(define (n a) (lambda (x y z) (+ x y z 4)))
((n 3) 1 2 3)

(define (f x y )
  ((lambda (a b)(+ (* x (square a))
                  (* y b)
                  (* a b)))
    (+ 1 (* x y))
    (- 1 y)))
(f 1 1)

(define (u x y) (let ((a (+ 1 (* x y)))
                      (b (- 1 y)))
                  (+ (* x (square a))
                  (* y b)
                  (* a b))
                 ))
(u 1 1 )

